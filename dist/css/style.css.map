{"version":3,"sourceRoot":"","sources":["base/_font-face.scss","base/_reset.scss","base/_typography.scss","abstracts/_colors.scss","abstracts/_typography.scss","base/_root.scss","abstracts/_mixins.scss","base/_general.scss","layout/_header.scss","layout/_footer.scss","layout/_main.scss","utils/_container.scss","utils/_appearence.scss","utils/_color-utils.scss","utils/_typography-utils.scss","utils/_layout-utils.scss","components/_buttons.scss","components/_toggle.scss","components/_option.scss","components/_progress-bar.scss","components/_topic-icons.scss"],"names":[],"mappings":"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","file":"style.css","sourcesContent":["@font-face {\r\n    font-family: \"Rubik\";\r\n    src: url(\"/src/fonts/static/Rubik-Regular.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 400;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Rubik\";\r\n    src: url(\"/src/fonts/static/Rubik-Medium.ttf\") format(\"truetype\");\r\n\r\n    font-weight: 500;\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Rubik\";\r\n    src: url(\"/src/fonts/static/Rubik-Italic.ttf\") format(\"truetype\");\r\n    \r\n    font-style: italic;\r\n}\r\n","// Based on https://piccalil.li/blog/a-modern-css-reset\r\n\r\n\r\n/* box sizing rules */\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n\r\n/* remove default margin */\r\nbody,\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\np,\r\nfigure {\r\n  margin: 0;\r\n}\r\n\r\n\r\n/* remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\r\nul[role='list'],\r\nol[role='list'] {\r\n  list-style: none;\r\n}\r\n\r\n\r\n/* set core root defaults */\r\nhtml {\r\n    height: 100%;\r\n\r\n    &:focus-visible {\r\n        scroll-behavior: smooth;\r\n    }\r\n}\r\n\r\n\r\n/* set core body defaults */\r\nbody {\r\n  height: 100%;\r\n  text-rendering: optimizeSpeed;\r\n}\r\n\r\n\r\n/* reset default link styles */\r\na {\r\n  text-decoration: auto;\r\n  color: inherit;\r\n}\r\n\r\n\r\n/* make images easier to work with  */\r\nimg,\r\npicture {\r\n  max-width: 100%;\r\n  display: block;\r\n}\r\n\r\n\r\n/* inherit fonts for inputs and buttons */\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect {\r\n  font: inherit;\r\n}\r\n\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* reset default heading typography styles */\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n    font: inherit;\r\n}\r\n\r\n\r\n/* larger line height for paragraphs */\r\np {\r\n    line-height: 1.5;\r\n}\r\n\r\n\r\nh1 {\r\n    color: $clr-dark-navy;\r\n    font-size: $font-size-heading;\r\n}\r\n","$colors: (\r\n    \"purple\": (\r\n        100: hsl(277, 91%, 56%)\r\n    ),\r\n\r\n    \"navy\": (\r\n        300: hsl(216, 25%, 25%),\r\n        200: hsl(215, 27%, 32%),\r\n        100: hsl(219, 13%, 44%)\r\n    ),\r\n\r\n\r\n    \"bluish\": (\r\n        300: hsl(216, 47%, 78%)\r\n    ),\r\n\r\n\r\n    \"gray\": (\r\n        100: hsl(220, 37%, 97%)\r\n    ),\r\n\r\n\r\n    \"white\": (\r\n        100: hsl(100, 100%, 100%)\r\n    ),\r\n\r\n\r\n    \"green\": (\r\n        500: hsl(151, 70%, 50%)\r\n    ),\r\n\r\n\r\n    \"red\": (\r\n        600: hsl(0, 82%, 63%)\r\n    )\r\n\r\n\r\n);\r\n\r\n$clr-purple: var(--clr-purple-100);\r\n$clr-dark-navy: var(--clr-navy-300);\r\n$clr-navy: var(--clr-navy-200);\r\n$clr-light-navy: var(--clr-navy-100);  // aca gray navy\r\n$clr-light-gray: var(--clr-gray-100);\r\n$clr-light-bluish: var(--clr-bluish-300);\r\n$clr-pure-white: var(--clr-white-100);\r\n$clr-green: var(--clr-green-500);\r\n$clr-red: var(--clr-red-600);\r\n","@use \"sizes\" as *;\r\n@use \"functions\" as *;\r\n\r\n$primary-font-family: \"Rubik\", \"sans-serif\";\r\n\r\n$font-weight-regular: 400;\r\n$font-weight-medium: 500;\r\n\r\n$type: (\r\n    typescale: (\r\n        small: (\r\n            600: rem(88),\r\n            500: rem(40),\r\n            400: rem(20),\r\n            300: rem(18),\r\n            200: rem(18),\r\n            100: rem(14)\r\n        ),\r\n        large : (\r\n            600: rem(144),\r\n            500: rem(64),\r\n            400: rem(36),\r\n            300: rem(28),\r\n            200: rem(24),\r\n            100: rem(20)\r\n        )\r\n    )\r\n);\r\n\r\n$font-size-display: var(--fs-600);      // heading display size\r\n$font-size-heading: var(--fs-500);      // heading L size\r\n$font-size-larger: var(--fs-400);       // heading M size\r\n$font-size-base: var(--fs-300);         // heading S size\r\n$font-size-smaller: var(--fs-200);      \r\n$font-size-smallest: var(--fs-100);\r\n","@use \"../abstracts/\" as *;\r\n\r\n:root {\r\n    @include convert_colors();\r\n    @include convert_typography();\r\n}\r\n","@use \"colors\"    as *;\r\n@use \"typography\" as *;\r\n@use \"functions\" as *;\r\n@use \"sizes\" as *;\r\n@use \"breakpoints\" as *;\r\n\r\n\r\n// Add min-width media query\r\n@mixin media-query($breakpoint: 768) {\r\n    @media (min-width: em($breakpoint)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n\r\n// Convert color map either into css custom properties\r\n@mixin convert_colors() {\r\n    $color-map: $colors;\r\n\r\n    @each $role, $shades in $color-map {\r\n\r\n        @each $lightness, $color in $shades {\r\n            --clr-#{$role}-#{$lightness}: #{$color};\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Convert map with typography related values either into css custom properties \r\n@mixin convert_typography() {\r\n    $typeography-map: $type;\r\n    \r\n    @each $key, $map in $typeography-map {\r\n        @if $key == \"typescale\" {\r\n            @each $screen-size, $typescale in $map {\r\n                \r\n                @if $screen-size == \"large\" {\r\n                    @include media-query($medium-screen-size) {\r\n                        @each $scale, $value in $typescale {\r\n                            --fs-#{$scale}: #{$value};\r\n                        }\r\n                    }\r\n\r\n                } @else {\r\n                    @each $scale, $value in $typescale {\r\n                        --fs-#{$scale}: #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Quick access to gap proprety for different situations\r\n@mixin flex($gap: 1rem) {\r\n    display: flex;\r\n    gap: $gap;\r\n}\r\n\r\n\r\n@mixin grid($gap: 1rem) {\r\n    display: grid;\r\n    gap: $gap;\r\n}\r\n\r\n\r\n// Basic list \r\n@mixin list($row: \"false\", $item-gap: 1rem, $off-markers: \"false\") {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    @if $row == \"true\" {\r\n        @include flex($item-gap);\r\n    } @else {\r\n        @include grid($item-gap);\r\n    }\r\n\r\n    @if $off-markers == \"true\" {\r\n        list-style-type: none;\r\n    }\r\n}\r\n\r\n\r\n// Set appearence to none for custom styling\r\n@mixin reset_appearence() {\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* general */\r\nbody {\r\n    background: $clr-light-gray;\r\n    background-image: url(\"/dist/img/pattern-background-mobile-light.svg\");\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n\r\n    color: $clr-dark-navy;\r\n    font-family: $primary-font-family;\r\n    font-size: $font-size-base;\r\n}\r\n\r\n\r\n.quiz-menu {\r\n    &__header {\r\n        align-content: start;\r\n    }\r\n}\r\n\r\n\r\n.quiz-main {\r\n    &__header {\r\n        @include grid(rem(24));\r\n        align-content: space-between;\r\n    }\r\n\r\n    // div container with questions left span and question itself\r\n    &__header > :first-child {\r\n        @include grid(rem(12));\r\n    }\r\n\r\n    @include media-query($medium-screen-size) {\r\n        &__header {\r\n            height: 80%;\r\n            gap: rem(40);\r\n        }\r\n\r\n        &__header > :first-child {\r\n            gap: rem(27);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.option-list {\r\n    @include list($off-markers: \"true\");\r\n}\r\n\r\n\r\n.option-container {\r\n    --_option-gap: var(--option-gap, #{em(16)});\r\n    margin-block: var(--_layout-gap);\r\n\r\n    // add equal spacing between each item inside option container\r\n    & * {\r\n        @include grid(var(--_option-gap));\r\n    }\r\n\r\n    @include media-query($medium-screen-size) {\r\n        --option-gap: #{em(24)};\r\n    }\r\n}\r\n\r\n\r\n// TODO: move to seperate file like \"text-utils\" ?\r\n.small-text {\r\n    font-size: $font-size-smallest;\r\n    color: $clr-light-navy; \r\n    font-style: italic;\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n/* HEADER */\r\n.header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    padding-block: 1rem;\r\n\r\n\r\n    &__quiz-topic {\r\n        @include flex();\r\n        align-items: center;\r\n\r\n        font-weight: $font-weight-medium;\r\n    }\r\n\r\n    \r\n    &__toggle {\r\n        @include flex(rem(8));\r\n        align-items: center;\r\n    }\r\n\r\n\r\n    &__toggle-icon {\r\n        width: rem(20);\r\n        aspect-ratio: 1;\r\n        \r\n        &:first-child {\r\n            background: url(\"/dist/img/icon-sun-dark.svg\");\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n        }\r\n    \r\n        &:last-child {\r\n            background: url(\"/dist/img/icon-moon-dark.svg\");\r\n            background-repeat: no-repeat;\r\n            background-size: cover;\r\n        }\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* FOOTER */","@use \"../abstracts/\" as *;\r\n\r\n/* MAIN */\r\n.main {\r\n    // spacing between header and options \r\n    --_layout-gap: var(--layout-gap, #{rem(40)});\r\n\r\n    & > article:not(.none) {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(min(30rem, 100%), 1fr));\r\n        column-gap: 10rem;\r\n    }\r\n\r\n\r\n    @include media-query($medium-screen-size) {\r\n        --layout-gap: #{rem(64)};\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* container */\r\n.container {\r\n    @include grid(2.5rem);\r\n\r\n    width: min(90%, rem(1920));\r\n    padding-inline: rem(12);\r\n    margin-inline: auto;\r\n}",".none {\r\n    display: none;\r\n}\r\n\r\n\r\n.hidden {\r\n    visibility: hidden;\r\n}\r\n\r\n\r\n.visually-hidden {\r\n    clip: rect(0 0 0 0);\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n  }","@use \"../abstracts/\" as *;\r\n\r\n/* color utilities */\r\n.bg-purple { background-color: $clr-purple; }\r\n.bg-dark-navy { background-color: $clr-dark-navy; }\r\n.bg-navy { background-color: $clr-navy; }\r\n.bg-light-navy { background-color: $clr-light-navy; }\r\n.bg-light-bluish { background-color: $clr-light-bluish; }\r\n.bg-pure-white { background-color: $clr-pure-white; }\r\n.bg-green { background-color: $clr-green; }\r\n.bg-red { background-color: $clr-red; }\r\n\r\n.clr-purple { color: $clr-purple; }\r\n.clr-dark-navy { color: $clr-dark-navy; }\r\n.clr-navy { color: $clr-navy; }\r\n.clr-light-navy { color: $clr-light-navy; }\r\n.clr-light-bluish { color: $clr-light-bluish; }\r\n.clr-pure-white { color: $clr-pure-white; }\r\n.clr-green { color: $clr-green; }\r\n.clr-red { color: $clr-red; }","@use \"../abstracts/\" as *;\r\n\r\n/* typography utilities */\r\n.fs-display { font-size: $font-size-display; }\r\n.fs-heading { font-size: $font-size-heading; }\r\n.fs-larger { font-size: $font-size-larger; }\r\n.fs-smaller { font-size: $font-size-smaller; }\r\n.fs-smallest { font-size: $font-size-smallest; }\r\n\r\n\r\n.fw-regular { font-weight: $font-weight-regular; }\r\n.fw-medium { font-weight: $font-weight-medium; }","@use \"../abstracts/\" as *;\r\n\r\n/* layout utilities */\r\n\r\n.flex {\r\n    display: flex;\r\n    gap: var(--gap, 1rem);\r\n}\r\n\r\n.grid {\r\n    display: grid;\r\n    gap: var(--gap, 1rem);\r\n}","@use \"../abstracts/\" as *;\r\n\r\n/* buttons */\r\n.button {\r\n    width: min(em(564), 100%);\r\n    padding: 2rem 4rem;\r\n\r\n    background-color: $clr-purple;\r\n    color: $clr-pure-white;\r\n    box-shadow: 0px 0px 14px 0px hsla(220, 29%, 66%, 50%);\r\n\r\n    border: none;\r\n    border-radius: rem(24);\r\n\r\n    font-weight: $font-weight-medium;\r\n\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background-color: hsl(277, 91%, 70%);\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n\r\n.toggle {\r\n    --_track-border-radius: 100rem;\r\n    --_track-padding: #{em(14)};\r\n    --_track-width: #{em(48)};\r\n    --_thumb-width: #{em(14)};\r\n\r\n    --_inline-spacing: 40%;\r\n    \r\n    @include reset_appearence();\r\n\r\n    position: relative;\r\n\r\n    width: var(--_track-width);\r\n    padding-block: var(--_track-padding);\r\n\r\n    background-color: $clr-purple;\r\n    border-radius: var(--_track-border-radius);\r\n\r\n    cursor: pointer;\r\n\r\n\r\n    // slider thumb\r\n    &:before {\r\n        content: \"\";\r\n        display: inline-block;\r\n        position: absolute;\r\n        \r\n        width: var(--_thumb-width);\r\n        aspect-ratio: 1;\r\n\r\n        background-color: $clr-pure-white;\r\n\r\n        border-radius: 50%;\r\n        top: 50%;\r\n        left: 0;\r\n\r\n        transform: translate(var(--_inline-spacing), -50%);\r\n        transition: transform .2s ease-in-out;\r\n    }\r\n\r\n\r\n    // move toggle thumb to right and saving spacing\r\n    &:checked {\r\n        &:before {\r\n            transform: translate(calc(var(--_track-width) - var(--_thumb-width) - var(--_inline-spacing)), -50%);\r\n        }\r\n    }\r\n}\r\n\r\n","@use \"../abstracts/\" as *;\r\n\r\n// change in dark mode: bg color, text color\r\n.option {\r\n    --_option-bg-color: var(--option-bg-color, #{$clr-pure-white});\r\n    --_option-padding: 0.75em;\r\n    --_icon-bg-color: var(--icon-bg-color, #{$clr-light-gray});\r\n    --_icon-text-color: var(--icon-text-color, currentColor);\r\n\r\n    @include flex();\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    width: min(em(564), 100%);\r\n\r\n    padding: var(--_option-padding);\r\n\r\n    background-color: var(--_option-bg-color);\r\n    color: $clr-dark-navy;\r\n    box-shadow: 0px 0px 14px 0px hsla(220, 29%, 66%, 50%);\r\n\r\n    border-radius: rem(24);\r\n\r\n    font-weight: $font-weight-medium;\r\n\r\n    outline: 5px solid transparent;\r\n\r\n    cursor: pointer;\r\n\r\n    // apply hover effect for UNCHECKED, UNDISABLED options\r\n    &:not(:has(:checked, :disabled)):hover {\r\n        --icon-text-color: #{$clr-purple};\r\n        --icon-bg-color: hsl(278, 100%, 95%);\r\n    }\r\n\r\n\r\n    // TODO: create a mixin for outline ? \r\n    // active option\r\n    &:has(:checked) {\r\n        --icon-bg-color: #{$clr-purple};\r\n        --icon-text-color: #{$clr-pure-white};\r\n        outline-color: $clr-purple;\r\n    }\r\n\r\n\r\n    // mark with green if picked correctly\r\n    &--picked-correctly {\r\n        --icon-bg-color: #{$clr-green};\r\n        --icon-text-color: #{$clr-pure-white};\r\n        outline-color: $clr-green;\r\n    }\r\n\r\n\r\n    // mark with red if picked incorrectly\r\n    &--picked-incorrectly {\r\n        --icon-bg-color: #{$clr-red};\r\n        --icon-text-color: #{$clr-pure-white};\r\n        outline-color: $clr-red;\r\n    }\r\n\r\n\r\n    // TODO: make width smaller on desktops so padding is not that large ? \r\n    &__alternative {\r\n        display: grid;\r\n        place-items: center;\r\n\r\n        width: 3em;\r\n        padding: 0.75rem;\r\n        aspect-ratio: 1;\r\n\r\n        color: var(--_icon-text-color);\r\n        background-color: var(--_icon-bg-color);\r\n        \r\n        border-radius: rem(12);\r\n    }\r\n\r\n\r\n    &__main {\r\n        @include flex(1em);\r\n        align-items: center;\r\n    }\r\n\r\n\r\n    &__state-indicator {\r\n        width: 2em;\r\n    }\r\n}\r\n","@use \"../abstracts/\" as *;\r\n\r\n.quiz-progress {\r\n    @include reset_appearence();\r\n    display: block;\r\n    width: 100%;\r\n\r\n    &::-webkit-progress-bar {\r\n        background-color: $clr-pure-white;\r\n        padding: rem(6);\r\n        border-radius: 100rem;\r\n\r\n    }\r\n\r\n    &::-webkit-progress-value {\r\n        background-color: $clr-purple;\r\n        border-radius: inherit;\r\n    }\r\n\r\n\r\n    &::-moz-progress-bar {\r\n        background-color: $clr-pure-white;\r\n        padding: rem(6);\r\n        border-radius: 100rem;\r\n    }\r\n}","@use \"../abstracts/\" as *;\r\n\r\n$icon-background-colors: (\r\n    \"html\": hsl(22, 100%, 96%),\r\n    \"css\" : hsl(151, 88%, 94%),\r\n    \"js\": hsl(225, 100%, 96%),\r\n    \"accessibility\": hsl(278, 100%, 95%)\r\n);\r\n\r\n.topic-icon {\r\n    width: 3.5rem;\r\n    aspect-ratio: 1;\r\n    padding: rem(10);\r\n    border-radius: rem(12);\r\n\r\n    &[data-icon=html] {\r\n        background: map-get($icon-background-colors, \"html\");\r\n    }\r\n    &[data-icon=css] {\r\n        background: map-get($icon-background-colors, \"css\");\r\n    }\r\n    &[data-icon=js] {\r\n        background: map-get($icon-background-colors, \"js\");\r\n    }\r\n    &[data-icon=accessibility] {\r\n        background: map-get($icon-background-colors, \"accessibility\");\r\n    }\r\n}"]}